# Application Configuration
app:
  name: myapp
  version: 1.0.0
  replicaCount: 3
  image:
    repository: myapp
    tag: latest
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
  service:
    type: ClusterIP
    port: 80
    targetPort: 8080
  ingress:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - host: app.example.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: app-tls
        hosts:
          - app.example.com

# Database Configuration
database:
  enabled: true
  type: mysql
  host: mysql
  port: 3306
  name: myapp
  username: admin
  password: changeme

# Redis Configuration
redis:
  enabled: true
  host: redis
  port: 6379
  password: changeme

# Monitoring Configuration
monitoring:
  enabled: true
  prometheus:
    enabled: true
    scrapeInterval: 15s
  grafana:
    enabled: true
    adminPassword: changeme
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-server
        access: proxy
        isDefault: true

# Logging Configuration
logging:
  enabled: true
  logLevel: INFO
  logFormat: json

# Security Configuration
security:
  enabled: true
  oauth2:
    enabled: true
    clientId: changeme
    clientSecret: changeme
    issuerUrl: https://auth.example.com
  tls:
    enabled: true
    secretName: app-tls

# Network Configuration
network:
  serviceMesh:
    enabled: true
    type: istio
  dns:
    enabled: true
    type: coredns
  loadBalancer:
    type: nginx
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
      service.beta.kubernetes.io/aws-load-balancer-internal: "true" 